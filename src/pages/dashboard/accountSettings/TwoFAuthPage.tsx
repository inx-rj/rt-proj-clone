import { useAppDispatch, useAppSelector } from "../../../redux/store";
import { lazy, Suspense, useEffect, useState } from "react";
import { useSingleEffect, useUpdateEffect } from "react-haiku";
import { TRIGGER_NAVIGATION_TAB_CONFIG } from "../../../redux/actions/config/global/global.actions";
import { settingsNavType } from "../../../helper/initialStates/dashboard/accountSettings/settingsState";
import { Images } from "../../../helper/images";
import { USER_DATA } from "../../../redux/reducers/auth/auth.slice";
import TwoFAResetFormWrapper from "../../../components/pages/accountSettings/twoFAuth/TwoFAResetFormWrapper";
import { openModal } from "@mantine/modals";

const NavigationCardTitle = lazy(
  () => import("../../../components/common/navigation/NavigationCardTitle")
);
const PhoneNumAuth = lazy(
  () =>
    import("../../../components/pages/accountSettings/twoFAuth/PhoneNumAuth")
);
const GoogleAuth = lazy(
  () => import("../../../components/pages/accountSettings/twoFAuth/GoogleAuth")
);

const TwoFAuthPage = () => {
  // Hooks
  const dispatch = useAppDispatch();

  // Redux states
  const UserData = useAppSelector(USER_DATA);

  // React states
  const [is2FAEnable, setIs2FAEnable] = useState(UserData.data["2FA"] ?? false);

  useSingleEffect(() => {
    dispatch(
      TRIGGER_NAVIGATION_TAB_CONFIG("settings", settingsNavType.TwoFAuth)
    ).then((r) => r);
  });

  // To disable 2FA
  const handle2FAToggle = async () => {
    if (is2FAEnable && UserData.data["2FA"]) {
      openModal({
        centered: true,
        closeOnClickOutside: false,
        overlayBlur: 3,
        overlayOpacity: 0.5,
        transition: "fade",
        radius: 20,
        padding: 15,
        styles: {
          header: { marginBottom: "0px", paddingRight: "5px" },
          close: { scale: 1.4 },
        },
        children: (
          <Suspense fallback="">
            <TwoFAResetFormWrapper
              setIs2FAEnable={setIs2FAEnable}
              messageContent={`<p>Are you sure you want to disable 2FA completely?</p>`}
            />
          </Suspense>
        ),
      });
    } else setIs2FAEnable(!is2FAEnable);
  };

  useUpdateEffect(() => {
    if (Object.keys(UserData.data)?.length > 0)
      setIs2FAEnable(UserData.data["2FA"]);
  }, [UserData.data["2FA"]]);

  return (
    <>
      <Suspense fallback="">
        <NavigationCardTitle
          title={"Configure Two Factor Authentication"}
          NavHeaderAction={
            <div className="flex items-center">
              <label className="form-label mb-0 mr-1">2FA</label>
              <div className="switch">
                <input
                  id={`switch`}
                  name="switch"
                  type="checkbox"
                  checked={is2FAEnable}
                  onChange={handle2FAToggle}
                />
                <label htmlFor={`switch`} />
              </div>
            </div>
          }
        />
      </Suspense>
      <div className="p-4">
        {is2FAEnable ? (
          <div className="grid grid-cols-2 gap-5 items-start">
            <Suspense fallback="">
              <PhoneNumAuth />
            </Suspense>
            <Suspense fallback="">
              <GoogleAuth />
            </Suspense>
          </div>
        ) : (
          <div className="max-w-[700px] w-full mx-auto text-center py-8">
            <img
              src={Images.TwoFAuthImg}
              alt="2FA Authentication"
              className="max-w-[360px] w-full mx-auto mb-5"
            />
            <h2 className="mb-8">Two Factor Authentication</h2>
            <p>
              Add an extra layer of security to your Online Control Panel by
              enabling two-factor authentication - an entirly optional feature
              of your account. If enabled you will be required to enter a
              variable code generated by authenticator app or by SMS, each time
              you login.
            </p>
          </div>
        )}
      </div>
    </>
  );
};

export default TwoFAuthPage;
